---
name: Build container image
on:
  push:
    branches:
      - '*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: marck/cert-manager-webhook-transip
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      #id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      -  name: Set up QEMU
         uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |-
            type=ref,event=branch
            type=ref,event=pr
            # set version tag for v* tags
            type=match,pattern=v(.*),group=1
            # set latest tag for default branch
            type=raw,value=latest,enable={{ is_default_branch }}
      - name: Build Docker image (non master branch)
        id: build-non-master
        if: github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
      - name: Build and push Docker image
        id: build-and-push
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
